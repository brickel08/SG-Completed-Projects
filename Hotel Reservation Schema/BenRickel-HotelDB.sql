DROP DATABASE IF EXISTS HotelReservation;

CREATE DATABASE IF NOT EXISTS HotelReservation;

USE HotelReservation;

CREATE TABLE IF NOT EXISTS Amenity (
	AmenityID TINYINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    AmenityType VARCHAR(15) NOT NULL,
    JacuzziCharge DECIMAL (4,2) NULL
);

CREATE TABLE IF NOT EXISTS RoomType (
	RoomTypeID TINYINT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    RoomType VARCHAR(10) NOT NULL,
    StandardOccupancy TINYINT NOT NULL,
    MaximumOccupancy TINYINT NOT NULL,
    BasePrice DECIMAL (5,2) NOT NULL,
    ExtraGuestCharge DECIMAL (4,2) NULL
);

CREATE TABLE IF NOT EXISTS Room (
	RoomID INT PRIMARY KEY NOT NULL,
    ADAAccessible BIT NOT NULL,
	RoomTypeID TINYINT NOT NULL,
		FOREIGN KEY fk_RoomTypeID(RoomTypeID)
			REFERENCES RoomType(RoomTypeID)
);

CREATE TABLE IF NOT EXISTS Zip (
	ZipID CHAR(5) PRIMARY KEY NOT NULL,
    City VARCHAR(25) NOT NULL,
    State VARCHAR(25) NOT NULL
);

CREATE TABLE IF NOT EXISTS Address (
	AddressID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    StreetNumber VARCHAR(15) NOT NULL,
    StreetName VARCHAR(45) NOT NULL,
    ZipID CHAR(5) NOT NULL,
		FOREIGN KEY fk_ZipID(ZipID)
			REFERENCES Zip(ZipID)
);

CREATE TABLE IF NOT EXISTS Guest (
	GuestID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    FirstName VARCHAR(25) NOT NULL,
    LastName VARCHAR(45) NOT NULL,
    Phone VARCHAR(15) NOT NULL,
    AddressID INT NOT NULL,
		FOREIGN KEY fk_AddressID (AddressID)
			REFERENCES Address(AddressID)
);

CREATE TABLE IF NOT EXISTS Reservation (
	ReservationID INT PRIMARY KEY AUTO_INCREMENT NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE NOT NULL,
    Adults TINYINT NOT NULL,
    Children TINYINT NULL,
    TotalRoomCost DECIMAL(6,2) NOT NULL,
    GuestID INT NOT NULL,
		FOREIGN KEY fk_GuestID(GuestID)
			REFERENCES Guest(GuestID),
	RoomID INT NOT NULL,
		FOREIGN KEY fk_RoomID(RoomID)
			REFERENCES Room(RoomID)
);

CREATE TABLE IF NOT EXISTS RoomAmenity (
	AmenityID TINYINT NOT NULL,
    RoomID INT NOT NULL,
    PRIMARY KEY pk_RoomAmenity (AmenityID, RoomID),
	FOREIGN KEY fk_RoomAmenity_Amenity (AmenityID) REFERENCES Amenity(AmenityID),
	FOREIGN KEY fk_RoomAmenity_Room (RoomID) REFERENCES Room(RoomID)
);